Index: app/src/main/java/com/example/apppetrobras/FormCadastro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.apppetrobras;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.AsyncTask;\nimport android.os.Handler;\nimport android.text.SpannableString;\nimport android.text.Spanned;\nimport android.text.method.HideReturnsTransformationMethod;\nimport android.text.method.LinkMovementMethod;\nimport android.text.method.PasswordTransformationMethod;\nimport android.text.style.ClickableSpan;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.CheckBox;\nimport android.widget.EditText;\nimport android.widget.TextView;\n\nimport android.os.Bundle;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.text.SpannableString;\nimport android.text.Spanned;\nimport android.text.method.HideReturnsTransformationMethod;\nimport android.text.method.LinkMovementMethod;\nimport android.text.method.PasswordTransformationMethod;\nimport android.text.style.ClickableSpan;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.example.apppetrobras.api.RetroFitClient;\n\nimport java.io.IOException;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\n\nimport okhttp3.ResponseBody;\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\n\npublic class FormCadastro extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_form_cadastro);\n\n        CheckBox textView = findViewById(R.id.aceitoTermos);\n        String text = \"Li e concordo com os TERMOS DE USO e POLÍTICAS DE PRIVACIDADE\";\n\n        SpannableString ss = new SpannableString(text);\n\n\n        ClickableSpan clicavel1 = new ClickableSpan() {\n            public void onClick(View widget) {\n                //link do pdf dos termos de uso\n                String url = \"https://www.hostinger.com.br/tutoriais/tutorial-do-git-basics-introducao#:~:text=Instalar%20o%20GIT%20no%20Windows%3A&text=Acesse%20o%20site%20oficial%20e,concluir%20com%20%C3%AAxito%20a%20instala%C3%A7%C3%A3o.\";\n                Intent i = new Intent(Intent.ACTION_VIEW);\n                i.setData(Uri.parse(url));\n                startActivity(i);\n            }\n        };\n\n        ClickableSpan clicavel2 = new ClickableSpan() {\n            @Override\n            public void onClick(View widget) {\n                //link do pdf das políticas de privacidade\n                String url = \"https://github.com/seugirdur/App-petrobras\";\n                Intent i = new Intent(Intent.ACTION_VIEW);\n                i.setData(Uri.parse(url));\n                startActivity(i);\n            }\n        };\n\n        // declarando parte que funcionará como clicável\n        ss.setSpan(clicavel1, 21, 34, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        ss.setSpan(clicavel2, 37, 61, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n\n        textView.setText(ss);\n        textView.setMovementMethod(LinkMovementMethod.getInstance());\n\n\n\n\n\n\n\n    }\n\n    //redirecionamento para ajuda\n    public void ajuda(View view){\n        Intent intent = new Intent(this, Ajuda.class);\n        startActivity(intent);\n\n    }\n\n    public void mostrarSenha(View view){\n        EditText senha = findViewById(R.id.insertSenha);\n        ImageButton imgBtn =(ImageButton) findViewById(R.id.imgMostrarSenha);\n\n\n        if(senha.getTransformationMethod().equals(PasswordTransformationMethod.getInstance())){\n            //mudar imagem\n            imgBtn.setImageResource(R.drawable.ic_baseline_remove_red_eye_24);\n\n            //Mostrar senha\n            senha.setTransformationMethod(HideReturnsTransformationMethod.getInstance());\n        }\n        else{\n            //mudar imagem\n            imgBtn.setImageResource(R.drawable.ic_baseline_remove_red_eye);\n\n            //Esconder senha\n            senha.setTransformationMethod(PasswordTransformationMethod.getInstance());\n\n\n        }\n    }\n\n\n    public void mostrarSenha2(View view){\n        EditText senha = findViewById(R.id.insertConfirmaSenha);\n        ImageButton imgBtn =(ImageButton) findViewById(R.id.imgMostrarSenha2);\n\n\n        if(senha.getTransformationMethod().equals(PasswordTransformationMethod.getInstance())){\n            //mudar imagem\n            imgBtn.setImageResource(R.drawable.ic_baseline_remove_red_eye_24);\n\n            //Mostrar senha\n            senha.setTransformationMethod(HideReturnsTransformationMethod.getInstance());\n        }\n        else{\n            //mudar imagem\n            imgBtn.setImageResource(R.drawable.ic_baseline_remove_red_eye);\n\n            //Esconder senha\n            senha.setTransformationMethod(PasswordTransformationMethod.getInstance());\n\n\n        }\n    }\n\n    //check-in do termos e condições\n    public void checarTermos (View view){\n        Button cad = findViewById(R.id.btn);\n        CheckBox check = findViewById(R.id.aceitoTermos);\n\n        if(check.isChecked())\n        {\n            cad.setEnabled(true);\n        }\n        else\n        {\n            cad.setEnabled(false);\n        }\n\n    }\n\n    //cadastro das informações\n    public void cadastro(View view){\n        TextView aviso = findViewById(R.id.avisaSenha);\n        EditText senha1 = (EditText) findViewById(R.id.insertSenha);\n        EditText senha2 = (EditText) findViewById(R.id.insertConfirmaSenha);\n        TextView nome = findViewById(R.id.insertNomeCompleto);\n        TextView tel = findViewById(R.id.insertTelefone);\n        TextView dataNas = findViewById(R.id.insertDataNascimento);\n        TextView email = findViewById(R.id.insertEmail);\n        TextView chave = findViewById(R.id.insertChave);\n        TextView senha = findViewById(R.id.insertSenha);\n        resgataInfo();\n        String Checknome = nome.getText().toString();\n        String Checktel = tel.getText().toString();\n        String CheckdataNas = dataNas.getText().toString();\n        String Checkemail = email.getText().toString();\n        String Checkchave =  chave.getText().toString();\n        String Checksenha =  senha.getText().toString();\n\n\n\n        if(!senhaIgual()){\n            aviso.setText(\"As senhas não conferem\");\n            aviso.setVisibility(View.VISIBLE);\n            senha1.setText(\"\");\n            senha2.setText(\"\");\n        }else if(Checknome.isEmpty() | Checkemail.isEmpty() |Checkchave.isEmpty()|Checksenha.isEmpty()|Checktel.isEmpty()|CheckdataNas.isEmpty()){\n          aviso.setText(\"Preencha as informações\");\n          aviso.setVisibility(View.VISIBLE);\n        }\n        else {\n            //new Insert().execute();\n            registrate();\n            Infos cadastro = resgataInfo();\n//            Handler handler = new Handler();\n//            handler.postDelayed(new Runnable() {\n//                public void run() {\n//                    Intent myIntent = new Intent(FormCadastro.this, FormLogin.class);\n//                    startActivity(myIntent);\n//                }\n//            }, 1500);\n        }\n\n    }\n\n    public Infos resgataInfo() {\n        TextView nome = findViewById(R.id.insertNomeCompleto);\n        TextView tel = findViewById(R.id.insertTelefone);\n        TextView dataNas = findViewById(R.id.insertDataNascimento);\n        TextView email = findViewById(R.id.insertEmail);\n        TextView chave = findViewById(R.id.insertChave);\n        TextView senha = findViewById(R.id.insertSenha);\n\n        String _nome = nome.getText() + \"\";\n        String _tel = tel.getText() + \"\";\n        String _dataNas = dataNas.getText() + \"\";\n        String _email = email.getText() + \"\";\n        String _chave = chave.getText() + \"\";\n        String _senha = senha.getText() + \"\";\n\n        Infos cliente = new Infos(_nome, _email, _tel, _dataNas, _chave, _senha);\n\n        return cliente;\n    }\n\n    //checar se senhas combinam\n    private boolean senhaIgual(){\n        boolean checking = false;\n        EditText senha1;\n        EditText senha2;\n\n        senha1 = (EditText) findViewById(R.id.insertSenha);\n        senha2 = (EditText) findViewById(R.id.insertConfirmaSenha);\n\n        String senhaTrans1 = senha1.getText() + \"\";\n        String senhaTrans2 = senha2.getText() + \"\";\n\n\n        if (senhaTrans1.equals(senhaTrans2)) {\n            checking = true;\n        }\n        return checking;\n    }\n\n\nprivate void registrate(){\n    Infos info = new Infos(resgataInfo().nome, resgataInfo().email, resgataInfo().tel, resgataInfo().dataNas, resgataInfo().chave, resgataInfo().senha);\n            String nome = info.nome.toString().trim();\n            String email = info.email.toString().trim();\n            String tel = info.tel.toString().trim();\n            String dataNasc = info.dataNas.toString().trim();\n            String chave = info.chave.toString().trim();\n            String senha = info.senha.toString().trim();\n            //String datanasc_br = info.dataNas;\n\n            Call<ResponseBody> call = RetroFitClient\n                    .getInstance()\n                    .getAPI()\n                    .createUser(nome, email, tel, dataNasc, chave, senha);\n\n            call.enqueue(new Callback<ResponseBody>() {\n                @Override\n                public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n                    try {\n                        String body = response.body().string();\n                        Toast.makeText(FormCadastro.this, body, Toast.LENGTH_LONG).show();\n                    }catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n\n                @Override\n                public void onFailure(Call<ResponseBody> call, Throwable t) {\n                    Toast.makeText(FormCadastro.this, t.getMessage(), Toast.LENGTH_LONG).show();\n\n                }\n            });\n\n}\n\n\n\n//    class Insert extends AsyncTask<Void, Void, Void> {\n//\n//        String checkchave1= \"\";\n//        String error=\"\";\n//        boolean flag=false;\n//\n//\n//        @Override\n//        protected Void doInBackground(Void... voids) {\n//            Infos info = new Infos(resgataInfo().nome, resgataInfo().email, resgataInfo().tel, resgataInfo().dataNas, resgataInfo().chave, resgataInfo().senha);\n//            String nome = info.nome;\n//            String email = info.email;\n//            String tel = info.tel;\n//            String datanasc = \"\";\n//            String chave = info.chave;\n//            String senha = info.senha;\n//            String datanasc_br = info.dataNas;\n//            char ch;\n//\n//            for (int i=0; i<datanasc_br.length(); i++)\n//            {\n//                ch= datanasc_br.charAt(i); //extracts each character\n//                datanasc= ch+datanasc; //adds each character in front of the existing string\n//            }\n//            try {\n//                Class.forName(\"com.mysql.jdbc.Driver\");\n//                Connection connection = DriverManager.getConnection(\"jdbc:mysql://139.177.199.178/test\",\"backend\",\"agathusia\");\n//\n//               Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\n//               ResultSet resultSet = statement.executeQuery(\"SELECT * FROM funcionarios\");\n//\n//                    while (resultSet.next()) {\n//                        checkchave1 = resultSet.getString(\"chave\");\n//\n//                        if (checkchave1.equals(chave)) {\n//                            flag=false;\n//                            Toast.makeText(FormCadastro.this, \"Usuário já cadastrado\", Toast.LENGTH_SHORT).show();\n//                            break;\n//\n//                        } else {\n//                            flag=true;\n//                        }\n//                    }\n//\n//                    if (flag) {\n//\n//                        //statement.executeUpdate(\"INSERT INTO funcionarios (nome, email, chave) values (\\\"\" + nome + \"\\\",\\\"\" + email + \"\\\",\\\"\" + chave + \"\\\");\");\n//\n//                    resultSet.last();\n//                    //int id = resultSet.getInt(\"id\") + 1;\n//                    resultSet.moveToInsertRow();\n//                    //resultSet.updateInt(\"id\", id);\n//                    resultSet.updateString(\"nome\", nome);\n//                    resultSet.updateString(\"email\", email);\n//                    resultSet.updateString(\"tel\", tel);\n//                    //resultSet.updateString(\"dataNasc\", datanasc);\n//                    resultSet.updateString(\"chave\", chave);\n//                    resultSet.updateString(\"senha\", senha);\n//                    resultSet.insertRow();\n//                    resultSet.beforeFirst();\n//                    }\n//            } catch(Exception e) {\n//                    error = e.toString();\n//            }\n//            return null;\n//        }\n//    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/apppetrobras/FormCadastro.java b/app/src/main/java/com/example/apppetrobras/FormCadastro.java
--- a/app/src/main/java/com/example/apppetrobras/FormCadastro.java	(revision 9d89dcb67ab37700529c6c2b7ba954e0f70a1e0d)
+++ b/app/src/main/java/com/example/apppetrobras/FormCadastro.java	(date 1663156601543)
@@ -88,13 +88,6 @@
 
         textView.setText(ss);
         textView.setMovementMethod(LinkMovementMethod.getInstance());
-
-
-
-
-
-
-
     }
 
     //redirecionamento para ajuda
@@ -104,6 +97,7 @@
 
     }
 
+    //metodo para o botao de Esconder/mostrar senha
     public void mostrarSenha(View view){
         EditText senha = findViewById(R.id.insertSenha);
         ImageButton imgBtn =(ImageButton) findViewById(R.id.imgMostrarSenha);
@@ -188,6 +182,7 @@
 
 
 
+        //metodo para conferir se as senhas sao iguais
         if(!senhaIgual()){
             aviso.setText("As senhas não conferem");
             aviso.setVisibility(View.VISIBLE);
@@ -198,16 +193,9 @@
           aviso.setVisibility(View.VISIBLE);
         }
         else {
-            //new Insert().execute();
             registrate();
             Infos cadastro = resgataInfo();
-//            Handler handler = new Handler();
-//            handler.postDelayed(new Runnable() {
-//                public void run() {
-//                    Intent myIntent = new Intent(FormCadastro.this, FormLogin.class);
-//                    startActivity(myIntent);
-//                }
-//            }, 1500);
+
         }
 
     }
@@ -251,7 +239,7 @@
         return checking;
     }
 
-
+//metodo para registro
 private void registrate(){
     Infos info = new Infos(resgataInfo().nome, resgataInfo().email, resgataInfo().tel, resgataInfo().dataNas, resgataInfo().chave, resgataInfo().senha);
             String nome = info.nome.toString().trim();
@@ -260,8 +248,8 @@
             String dataNasc = info.dataNas.toString().trim();
             String chave = info.chave.toString().trim();
             String senha = info.senha.toString().trim();
-            //String datanasc_br = info.dataNas;
 
+            //call para guardar no banco de dados e conferir se o usuario ja existe
             Call<ResponseBody> call = RetroFitClient
                     .getInstance()
                     .getAPI()
@@ -285,75 +273,5 @@
                 }
             });
 
-}
-
-
-
-//    class Insert extends AsyncTask<Void, Void, Void> {
-//
-//        String checkchave1= "";
-//        String error="";
-//        boolean flag=false;
-//
-//
-//        @Override
-//        protected Void doInBackground(Void... voids) {
-//            Infos info = new Infos(resgataInfo().nome, resgataInfo().email, resgataInfo().tel, resgataInfo().dataNas, resgataInfo().chave, resgataInfo().senha);
-//            String nome = info.nome;
-//            String email = info.email;
-//            String tel = info.tel;
-//            String datanasc = "";
-//            String chave = info.chave;
-//            String senha = info.senha;
-//            String datanasc_br = info.dataNas;
-//            char ch;
-//
-//            for (int i=0; i<datanasc_br.length(); i++)
-//            {
-//                ch= datanasc_br.charAt(i); //extracts each character
-//                datanasc= ch+datanasc; //adds each character in front of the existing string
-//            }
-//            try {
-//                Class.forName("com.mysql.jdbc.Driver");
-//                Connection connection = DriverManager.getConnection("jdbc:mysql://139.177.199.178/test","backend","agathusia");
-//
-//               Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
-//               ResultSet resultSet = statement.executeQuery("SELECT * FROM funcionarios");
-//
-//                    while (resultSet.next()) {
-//                        checkchave1 = resultSet.getString("chave");
-//
-//                        if (checkchave1.equals(chave)) {
-//                            flag=false;
-//                            Toast.makeText(FormCadastro.this, "Usuário já cadastrado", Toast.LENGTH_SHORT).show();
-//                            break;
-//
-//                        } else {
-//                            flag=true;
-//                        }
-//                    }
-//
-//                    if (flag) {
-//
-//                        //statement.executeUpdate("INSERT INTO funcionarios (nome, email, chave) values (\"" + nome + "\",\"" + email + "\",\"" + chave + "\");");
-//
-//                    resultSet.last();
-//                    //int id = resultSet.getInt("id") + 1;
-//                    resultSet.moveToInsertRow();
-//                    //resultSet.updateInt("id", id);
-//                    resultSet.updateString("nome", nome);
-//                    resultSet.updateString("email", email);
-//                    resultSet.updateString("tel", tel);
-//                    //resultSet.updateString("dataNasc", datanasc);
-//                    resultSet.updateString("chave", chave);
-//                    resultSet.updateString("senha", senha);
-//                    resultSet.insertRow();
-//                    resultSet.beforeFirst();
-//                    }
-//            } catch(Exception e) {
-//                    error = e.toString();
-//            }
-//            return null;
-//        }
-//    }
+    }
 }
Index: app/src/main/java/com/example/apppetrobras/FormLogin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.apppetrobras;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.os.Bundle;\nimport android.text.method.HideReturnsTransformationMethod;\nimport android.text.method.PasswordTransformationMethod;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.Toast;\n\nimport com.example.apppetrobras.api.RetroFitClient;\nimport com.example.apppetrobras.models.UserAPI;\n\nimport java.util.List;\n\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\n\n\npublic class FormLogin extends AppCompatActivity {\n\n    EditText edit_user, edit_senha;\n    Button button_login, esqueceu_senha;\n    String user, pass, userbd, passbd,nomebd, emailbd, telbd;\n    Dialog mDialog;\n    ProgressBar progressbar;\n    boolean passwordVisible;\n    SharedPreferences sp;\n    SharedPreferences.Editor editor;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_form_login);\n\n        edit_user = findViewById(R.id.edit_user);\n        edit_senha = findViewById(R.id.edit_senha);\n        button_login = findViewById(R.id.button_login);\n        esqueceu_senha = findViewById(R.id.esqueceu_senha);\n\n        mDialog = new Dialog(this);\n\n        button_login.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                progressbar=findViewById(R.id.progressbar);\n                guardate();\n                //new Task().execute();\n                progressbar.setVisibility(View.VISIBLE);\n\n            }\n        });\n\n        esqueceu_senha.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                mDialog.setContentView(R.layout.popup);\n                mDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n                mDialog.show();\n\n            }\n        });\n\n        edit_senha.setOnTouchListener(new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View view, MotionEvent motionEvent) {\n\n                final int Right=2;\n                if(motionEvent.getAction()==MotionEvent.ACTION_UP) {\n\n                    if(motionEvent.getRawX()>=edit_senha.getRight()-edit_senha.getCompoundDrawables() [Right].getBounds().width()) {\n\n                        int selection=edit_senha.getSelectionEnd();\n                        if(passwordVisible){\n\n                            // set drawable image here\n                            edit_senha.setCompoundDrawablesRelativeWithIntrinsicBounds(0,0, R.drawable.ic_eye, 0);\n\n                            //for hide password\n                            edit_senha.setTransformationMethod(PasswordTransformationMethod.getInstance());\n                            passwordVisible=false;\n\n\n                        }else {\n\n                            //set drawable image here\n                            edit_senha.setCompoundDrawablesRelativeWithIntrinsicBounds(0,0,R.drawable.ic_eye_off,0);\n\n\n                            //for show password\n                            edit_senha.setTransformationMethod(HideReturnsTransformationMethod.getInstance());\n                            passwordVisible=true;\n\n\n                        }\n\n                        edit_senha.setSelection(selection);\n                        return true;\n\n                    }\n                }\n\n\n\n\n                return false;\n            }\n        });\n\n    }\n\n    private void guardate(){\n\n        String chave = edit_user.getText().toString().trim();\n        String senha = edit_senha.getText().toString().trim();\n\n\n        Call<List<UserAPI>> call = RetroFitClient\n                .getInstance()\n                .getAPI()\n                .userLogin(chave, senha);\n\n        call.enqueue(new Callback<List<UserAPI>>() {\n            @Override\n            public void onResponse(Call<List<UserAPI>> call, Response<List<UserAPI>> response) {\n                if (!response.isSuccessful()){\n                    Toast.makeText(FormLogin.this, response.code(), Toast.LENGTH_SHORT).show();\n                    return;\n                }\n                List<UserAPI> userAPIList = response.body();\n                UserAPI userAPI = userAPIList.get(0);\n                String lmao = userAPI.getNome();\n                Toast.makeText(FormLogin.this, \"Bem vindo \"+lmao, Toast.LENGTH_SHORT).show();\n\n                sp = getSharedPreferences(\"meliorism\", MODE_PRIVATE);\n                SharedPreferences.Editor editor = sp.edit();\n                editor.putString(getString(R.string.UserName), lmao);\n                editor.apply();\n\n                Intent intent = new Intent(FormLogin.this, RelatorioProcesso.class);\n                startActivity(intent);\n\n            }\n\n            @Override\n            public void onFailure(Call<List<UserAPI>> call, Throwable t) {\n                Toast.makeText(FormLogin.this, t.getMessage(), Toast.LENGTH_SHORT).show();\n            }\n        });\n\n//        Call<LoginResponse> call = RetroFitClient\n//                .getInstance()\n//                .getAPI()\n//                .userLogin(chave, senha);\n//\n//        call.enqueue(new Callback<LoginResponse>() {\n//            @Override\n//            public void onResponse(Call<LoginResponse> call, Response<LoginResponse> response) {\n//                LoginResponse loginResponse = response.body();\n//\n//                if (!loginResponse.isError()){\n//                    String boradescobrir = loginResponse.getMessage();\n////                    if(boradescobrir.equals(chave)) {\n////                        Intent intent = new Intent(FormLogin.this, TabActivity.class);\n////                        startActivity(intent);\n////                    }\n//\n//\n//\n////                    public List<Message> readMessagesArray(JsonReader reader) throws IOException {\n////                        List<Message> messages = new ArrayList<Message>();\n////\n////                        reader.beginArray();\n////                        while (reader.hasNext()) {\n////                            messages.add(readMessage(reader));\n////                        }\n////                        reader.endArray();\n////                        return messages;\n////                    }\n//\n//\n//\n//\n//\n//                    Toast.makeText(FormLogin.this, loginResponse.getMessage(), Toast.LENGTH_LONG).show();\n////                    Intent intent = new Intent(FormLogin.this, RelatorioProcesso.class);\n////                    startActivity(intent);\n//                } else {\n//                    Toast.makeText(FormLogin.this, loginResponse.getMessage(), Toast.LENGTH_LONG).show();\n//                }\n//            }\n//\n//            @Override\n//            public void onFailure(Call<LoginResponse> call, Throwable t) {\n//                Toast.makeText(FormLogin.this, t.getMessage(), Toast.LENGTH_LONG).show();\n//            }\n//        });\n\n    }\n\n\n    public userLogged guardaInfo() {\n        String guardanome;\n        String guardatel;\n        String guardaemail;\n        String guardachave;\n        String guardasenha;\n\n        guardanome = nomebd;\n        guardatel = telbd;\n        guardaemail = emailbd;\n        guardachave = userbd;\n        guardasenha = passbd;\n\n        userLogged usuario = new userLogged(guardanome, guardatel, guardaemail, guardachave, guardasenha);\n        usuario.setNome(guardanome);\n        usuario.setTel(guardatel);\n        usuario.setEmail(guardaemail);\n        usuario.setChave(guardachave);\n        usuario.setSenha(guardasenha);\n\n        //Intent intent = new Intent(this, RelatorioProcesso.class);\n        //intent.putExtra(\"userlogged\", usuario);\n\n        return usuario;\n\n    }\n\n//    class Task extends AsyncTask<Void, Void, Void> {\n//        String records = \"\", error=\"\";\n//        String user = edit_user.getText().toString();\n//        String pass = edit_senha.getText().toString();\n//\n//        @Override\n//        protected Void doInBackground(Void... voids) {\n//            try {\n//\n//                Class.forName(\"com.mysql.jdbc.Driver\");\n//                Connection connection = DriverManager.getConnection(\"jdbc:mysql://139.177.199.178/test\",\"backend\",\"agathusia\");\n//                Statement statement = connection.createStatement();\n//                ResultSet resultSet = statement.executeQuery(\"SELECT * FROM funcionarios\");\n//\n//                while(resultSet.next()) {\n//                    nomebd = resultSet.getString(\"nome\");\n//                    telbd = resultSet.getString(\"tel\");\n//                    emailbd = resultSet.getString(\"email\");\n//                    userbd = resultSet.getString(\"chave\");\n//                    passbd = resultSet.getString(\"senha\");\n//\n//                    if(user.equals(userbd) && pass.equals(passbd)) {\n//                        break;\n//                    }\n//                }\n//\n//            } catch(Exception e) {\n//                error = e.toString();\n//            }\n//            return null;\n//        }\n//\n//        @Override\n//        protected void onPostExecute(Void unused) {\n//            if (error != \"\") {\n//            }\n//\n//            if(user.equals(userbd) && pass.equals(passbd)) {\n//                Toast.makeText(FormLogin.this, \"Bem vindo \"+nomebd , Toast.LENGTH_SHORT).show();\n//\n//                Intent intent = new Intent(FormLogin.this, TabActivity.class);\n//                intent.putExtra(\"userlogged\", guardaInfo());\n//                startActivity(intent);\n//                finish();\n//\n//            } else {\n//                Toast.makeText(FormLogin.this, \"n foi dnv\", Toast.LENGTH_SHORT).show();\n//            }\n//\n//            super.onPostExecute(unused);\n//        }\n//    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/apppetrobras/FormLogin.java b/app/src/main/java/com/example/apppetrobras/FormLogin.java
--- a/app/src/main/java/com/example/apppetrobras/FormLogin.java	(revision 9d89dcb67ab37700529c6c2b7ba954e0f70a1e0d)
+++ b/app/src/main/java/com/example/apppetrobras/FormLogin.java	(date 1663156657141)
@@ -52,6 +52,7 @@
 
         mDialog = new Dialog(this);
 
+        //botao de login que chama o metodo de login
         button_login.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -64,6 +65,7 @@
             }
         });
 
+        //botao em formato de texto para quem esqueceu a senha
         esqueceu_senha.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -75,6 +77,7 @@
             }
         });
 
+
         edit_senha.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View view, MotionEvent motionEvent) {
@@ -93,8 +96,6 @@
                             //for hide password
                             edit_senha.setTransformationMethod(PasswordTransformationMethod.getInstance());
                             passwordVisible=false;
-
-
                         }else {
 
                             //set drawable image here
@@ -104,8 +105,6 @@
                             //for show password
                             edit_senha.setTransformationMethod(HideReturnsTransformationMethod.getInstance());
                             passwordVisible=true;
-
-
                         }
 
                         edit_senha.setSelection(selection);
@@ -113,10 +112,6 @@
 
                     }
                 }
-
-
-
-
                 return false;
             }
         });
@@ -141,6 +136,7 @@
                     Toast.makeText(FormLogin.this, response.code(), Toast.LENGTH_SHORT).show();
                     return;
                 }
+
                 List<UserAPI> userAPIList = response.body();
                 UserAPI userAPI = userAPIList.get(0);
                 String lmao = userAPI.getNome();
@@ -153,7 +149,6 @@
 
                 Intent intent = new Intent(FormLogin.this, RelatorioProcesso.class);
                 startActivity(intent);
-
             }
 
             @Override
@@ -161,135 +156,5 @@
                 Toast.makeText(FormLogin.this, t.getMessage(), Toast.LENGTH_SHORT).show();
             }
         });
-
-//        Call<LoginResponse> call = RetroFitClient
-//                .getInstance()
-//                .getAPI()
-//                .userLogin(chave, senha);
-//
-//        call.enqueue(new Callback<LoginResponse>() {
-//            @Override
-//            public void onResponse(Call<LoginResponse> call, Response<LoginResponse> response) {
-//                LoginResponse loginResponse = response.body();
-//
-//                if (!loginResponse.isError()){
-//                    String boradescobrir = loginResponse.getMessage();
-////                    if(boradescobrir.equals(chave)) {
-////                        Intent intent = new Intent(FormLogin.this, TabActivity.class);
-////                        startActivity(intent);
-////                    }
-//
-//
-//
-////                    public List<Message> readMessagesArray(JsonReader reader) throws IOException {
-////                        List<Message> messages = new ArrayList<Message>();
-////
-////                        reader.beginArray();
-////                        while (reader.hasNext()) {
-////                            messages.add(readMessage(reader));
-////                        }
-////                        reader.endArray();
-////                        return messages;
-////                    }
-//
-//
-//
-//
-//
-//                    Toast.makeText(FormLogin.this, loginResponse.getMessage(), Toast.LENGTH_LONG).show();
-////                    Intent intent = new Intent(FormLogin.this, RelatorioProcesso.class);
-////                    startActivity(intent);
-//                } else {
-//                    Toast.makeText(FormLogin.this, loginResponse.getMessage(), Toast.LENGTH_LONG).show();
-//                }
-//            }
-//
-//            @Override
-//            public void onFailure(Call<LoginResponse> call, Throwable t) {
-//                Toast.makeText(FormLogin.this, t.getMessage(), Toast.LENGTH_LONG).show();
-//            }
-//        });
-
     }
-
-
-    public userLogged guardaInfo() {
-        String guardanome;
-        String guardatel;
-        String guardaemail;
-        String guardachave;
-        String guardasenha;
-
-        guardanome = nomebd;
-        guardatel = telbd;
-        guardaemail = emailbd;
-        guardachave = userbd;
-        guardasenha = passbd;
-
-        userLogged usuario = new userLogged(guardanome, guardatel, guardaemail, guardachave, guardasenha);
-        usuario.setNome(guardanome);
-        usuario.setTel(guardatel);
-        usuario.setEmail(guardaemail);
-        usuario.setChave(guardachave);
-        usuario.setSenha(guardasenha);
-
-        //Intent intent = new Intent(this, RelatorioProcesso.class);
-        //intent.putExtra("userlogged", usuario);
-
-        return usuario;
-
-    }
-
-//    class Task extends AsyncTask<Void, Void, Void> {
-//        String records = "", error="";
-//        String user = edit_user.getText().toString();
-//        String pass = edit_senha.getText().toString();
-//
-//        @Override
-//        protected Void doInBackground(Void... voids) {
-//            try {
-//
-//                Class.forName("com.mysql.jdbc.Driver");
-//                Connection connection = DriverManager.getConnection("jdbc:mysql://139.177.199.178/test","backend","agathusia");
-//                Statement statement = connection.createStatement();
-//                ResultSet resultSet = statement.executeQuery("SELECT * FROM funcionarios");
-//
-//                while(resultSet.next()) {
-//                    nomebd = resultSet.getString("nome");
-//                    telbd = resultSet.getString("tel");
-//                    emailbd = resultSet.getString("email");
-//                    userbd = resultSet.getString("chave");
-//                    passbd = resultSet.getString("senha");
-//
-//                    if(user.equals(userbd) && pass.equals(passbd)) {
-//                        break;
-//                    }
-//                }
-//
-//            } catch(Exception e) {
-//                error = e.toString();
-//            }
-//            return null;
-//        }
-//
-//        @Override
-//        protected void onPostExecute(Void unused) {
-//            if (error != "") {
-//            }
-//
-//            if(user.equals(userbd) && pass.equals(passbd)) {
-//                Toast.makeText(FormLogin.this, "Bem vindo "+nomebd , Toast.LENGTH_SHORT).show();
-//
-//                Intent intent = new Intent(FormLogin.this, TabActivity.class);
-//                intent.putExtra("userlogged", guardaInfo());
-//                startActivity(intent);
-//                finish();
-//
-//            } else {
-//                Toast.makeText(FormLogin.this, "n foi dnv", Toast.LENGTH_SHORT).show();
-//            }
-//
-//            super.onPostExecute(unused);
-//        }
-//    }
 }
Index: app/src/main/java/com/example/apppetrobras/api/API.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.apppetrobras.api;\n\nimport com.example.apppetrobras.Problems;\nimport com.example.apppetrobras.models.UserAPI;\n\nimport java.util.List;\n\nimport okhttp3.ResponseBody;\nimport retrofit2.Call;\nimport retrofit2.http.Field;\nimport retrofit2.http.FormUrlEncoded;\nimport retrofit2.http.GET;\nimport retrofit2.http.POST;\n\npublic interface API {\n\n    @FormUrlEncoded\n    @POST(\"/usuarios/cadastro\")\n    Call<ResponseBody> createUser(\n            @Field(\"nome\") String nome,\n            @Field(\"email\") String email,\n            @Field(\"tel\") String tel,\n            @Field(\"dataNasc\") String dataNasc,\n            @Field(\"chave\") String chave,\n            @Field(\"senha\") String senha\n    );\n\n    @FormUrlEncoded\n    @POST(\"/usuarios/login\")\n    Call<List<UserAPI>> userLogin(\n            @Field(\"chave\") String chave,\n            @Field(\"senha\") String senha\n    );\n\n    @GET(\"/problems\")\n    Call<List<Problems>> getProblems();\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/apppetrobras/api/API.java b/app/src/main/java/com/example/apppetrobras/api/API.java
--- a/app/src/main/java/com/example/apppetrobras/api/API.java	(revision 9d89dcb67ab37700529c6c2b7ba954e0f70a1e0d)
+++ b/app/src/main/java/com/example/apppetrobras/api/API.java	(date 1663155472216)
@@ -14,6 +14,10 @@
 
 public interface API {
 
+    //Classe com todos os metodos para as diferentes rotas da nossa API
+
+
+    //Rota POST para cadastro
     @FormUrlEncoded
     @POST("/usuarios/cadastro")
     Call<ResponseBody> createUser(
@@ -25,6 +29,7 @@
             @Field("senha") String senha
     );
 
+    //Rota POST para login do usuario
     @FormUrlEncoded
     @POST("/usuarios/login")
     Call<List<UserAPI>> userLogin(
@@ -32,6 +37,7 @@
             @Field("senha") String senha
     );
 
+    //Rota GET para receber o JSON com a lista teste de todos os problemas
     @GET("/problems")
     Call<List<Problems>> getProblems();
 }
Index: app/src/main/java/com/example/apppetrobras/api/RetroFitClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.apppetrobras.api;\n\nimport retrofit2.Retrofit;\nimport retrofit2.converter.gson.GsonConverterFactory;\n\npublic class RetroFitClient {\n\n    private static final String BASE_URL = \"http://api-heroku-petrobras.herokuapp.com\";\n    private static RetroFitClient mInstance;\n    private Retrofit retrofit;\n\n    private RetroFitClient(){\n        retrofit = new Retrofit.Builder()\n                .baseUrl(BASE_URL)\n                .addConverterFactory(GsonConverterFactory.create())\n                .build();\n\n    }\n    public static synchronized RetroFitClient getInstance(){\n        if (mInstance == null) {\n            mInstance = new RetroFitClient();\n        }\n        return mInstance;\n    }\n\n    public API getAPI() {\n        return retrofit.create(API.class);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/apppetrobras/api/RetroFitClient.java b/app/src/main/java/com/example/apppetrobras/api/RetroFitClient.java
--- a/app/src/main/java/com/example/apppetrobras/api/RetroFitClient.java	(revision 9d89dcb67ab37700529c6c2b7ba954e0f70a1e0d)
+++ b/app/src/main/java/com/example/apppetrobras/api/RetroFitClient.java	(date 1663155472180)
@@ -5,10 +5,14 @@
 
 public class RetroFitClient {
 
+    //Classe de conexao da library do Retrofit para chamar da API
+
+    //Criando as variaveis para uso do Retrofit
     private static final String BASE_URL = "http://api-heroku-petrobras.herokuapp.com";
     private static RetroFitClient mInstance;
     private Retrofit retrofit;
 
+    //Codigo padrao para instancia do Reotrofit com o GSON
     private RetroFitClient(){
         retrofit = new Retrofit.Builder()
                 .baseUrl(BASE_URL)
@@ -16,6 +20,8 @@
                 .build();
 
     }
+
+    //Metodo para instanciar novamente o Retrofit caso ele seja cancelado por algum motivo
     public static synchronized RetroFitClient getInstance(){
         if (mInstance == null) {
             mInstance = new RetroFitClient();
@@ -23,6 +29,7 @@
         return mInstance;
     }
 
+    //metodo que faz possivel retornar o retrofit para qualquer classe em vez de ter que escrever o codigo toda vez
     public API getAPI() {
         return retrofit.create(API.class);
     }
Index: app/src/main/java/com/example/apppetrobras/models/UserAPI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.apppetrobras.models;\n\npublic class UserAPI {\n    private String nome, email, tel, dataNasc, chave, senha;\n    private Integer id;\n\n    public UserAPI(Integer id, String nome, String email, String tel, String dataNasc, String chave, String senha) {\n        this.id = id;\n        this.nome = nome;\n        this.email = email;\n        this.tel = tel;\n        this.dataNasc = dataNasc;\n        this.chave = chave;\n        this.senha = senha;\n    }\n\n    public Integer getId() {\n        return id;\n    }\n\n    public String getNome() {\n        return nome;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public String getTel() {\n        return tel;\n    }\n\n    public String getDataNasc() {\n        return dataNasc;\n    }\n\n    public String getChave() {\n        return chave;\n    }\n\n    public String getSenha() {\n        return senha;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/apppetrobras/models/UserAPI.java b/app/src/main/java/com/example/apppetrobras/models/UserAPI.java
--- a/app/src/main/java/com/example/apppetrobras/models/UserAPI.java	(revision 9d89dcb67ab37700529c6c2b7ba954e0f70a1e0d)
+++ b/app/src/main/java/com/example/apppetrobras/models/UserAPI.java	(date 1663155746062)
@@ -1,6 +1,8 @@
 package com.example.apppetrobras.models;
 
 public class UserAPI {
+
+    //Classe publica para guardar as informaçoes do usuario que fizer login para ficar disponivel para classes que precisem dessa informaçao
     private String nome, email, tel, dataNasc, chave, senha;
     private Integer id;
 
@@ -41,4 +43,4 @@
     public String getSenha() {
         return senha;
     }
-}
+}
\ No newline at end of file
Index: app/src/main/java/com/example/apppetrobras/models/LoginResponse.java
===================================================================
diff --git a/app/src/main/java/com/example/apppetrobras/models/LoginResponse.java b/app/src/main/java/com/example/apppetrobras/models/LoginResponse.java
deleted file mode 100644
--- a/app/src/main/java/com/example/apppetrobras/models/LoginResponse.java	(revision 9d89dcb67ab37700529c6c2b7ba954e0f70a1e0d)
+++ /dev/null	(revision 9d89dcb67ab37700529c6c2b7ba954e0f70a1e0d)
@@ -1,36 +0,0 @@
-//package com.example.apppetrobras.models;
-//
-//import java.util.List;
-//
-//public class LoginResponse {
-//
-//    private boolean error;
-//    private String message;
-//    private List<UserAPI> userAPIList;
-//    private UserAPI userAPI;
-//
-//
-//    public LoginResponse(boolean error, String message, List<UserAPI> userAPIList, UserAPI userAPI) {
-//        this.error = error;
-//        this.message = message;
-//        this.userAPIList = userAPIList;
-//        this.userAPI = userAPI;
-//    }
-//
-//    public boolean isError() {
-//        return error;
-//    }
-//
-//    public String getMessage() {
-//        return message;
-//    }
-//
-//    public List<UserAPI> getUserAPIList() {
-//        return userAPIList;
-//    }
-//
-//
-//        public UserAPI getUserAPI() {
-//        return userAPI;
-//    }
-//}
\ No newline at end of file
